peaches & mangoes: Anastasia Lee, Nia Lam, Naomi Lai
SoftDev
Oct 2024

PREDICTIONS:
* If you go to the webpage, a login page will appear where you can enter a username and press submit
* Once you press submit, the web server will route you to the http://127.0.0.1:5000/auth page, triggering the authenticate() method
* As a result, the web server will display "Waaaa hooo HAAAH"
-----------------------------------------------------------------------

DISCO:
* When you run app.py, print statement from testmod0.py appears in the terminal and the webpage displays “Howdy, friends!” along with an input box and submission button.
* After you enter a username in the input box, terminal displays auth?username=<username>&sub1=Submit between “GET / and HTTP/1.1" 200 -
* After you submit a username, the web server goes to http://127.0.0.1:5000/auth?username=<username>&sub1=Submit 

After uncommenting...
* disp_loginpage() will produce a BadRequestKeyError when print(request.args[‘username’] is run
* In the terminal, information is displayed about the object (Flask obj, request obj, request.args, request.args[‘username’], request.headers)
* There is only an error when disp_loginpage() requests the username, not when authenticate() requests, because at the time when disp_loginpage() is run, the username has not been entered yet
* request.args is an ImmutableMultiDict with the variables from the form and their values
* request.args['username'] in authenticate() is the username that was submitted
* request.headers contains a lot of backend information, like the host, user agent, etc.

After reading the notes and trying ourselves...
* GET requests can be seen in the URL (appended after ".../auth"), while POST requests cannot (but they are still not secure)
* request.args has the variables from GET requests, request.form has the variables from POST requests (and is also an immutable dictionary)
* GET is the default method in the HTML template, but you can specify using POST by adding method="POST" to the line that begins the form
* You don't need to specify methods=['GET'] in the app route, but you do need to include methods=['POST'] if you're using a POST request

* importing the testmod0 allows you to call methods within testmod0.py, e.g. testmod.goo()
-----------------------------------------------------------------------

Q/C/C:
* What are all the possible input types when creating a form in HTML?
* Does Flask automatically create the modified URL when the form is submitted?
* What are all the benefits of importing python modules?
* What is __pycache__?